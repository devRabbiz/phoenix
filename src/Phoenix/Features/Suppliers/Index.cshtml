@model Phoenix.Features.Suppliers.SupplierListViewModel
@{
    ViewData["Title"] = "Suppliers";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Suppliers</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
    <div class="btn-group mr-2">
        <a class="btn btn-sm btn-outline-secondary" asp-controller="Suppliers" asp-action="New">New Supplier</a>
    </div>
    </div>
</div>

<div>
    <table class="table table-hover">
        <thead class="thead-dark">
            <tr>
                <th scope="col">Id</th>
                <th scope="col">Name</th>
                <th scope="col">Phone</th>
                <th scope="col">Fax</th>
                <th scope="col">City</th>
                <th scope="col">Country</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var supplier in Model.Data)
            {
                <tr>
                    <th scope="row">@Html.DisplayFor(c => supplier.Id)</th>
                    <td>@Html.ActionLink(supplier.Name, "View", "Suppliers", new { supplier.Id })</td>
                    <td>@Html.DisplayFor(c => supplier.Phone)</td>
                    <td>@Html.DisplayFor(c => supplier.Fax)</td>
                    <td>@Html.DisplayFor(c => supplier.City)</td>
                    <td>@Html.DisplayFor(c => supplier.Country)</td>
                </tr>   
            }
        </tbody>
    </table>
    @if (Model.Data.Any() && Model.Total > Model.Size)
    {
        <nav>
            <ul class="pagination justify-content-center">
                @{
                    string previousDisabled = !Model.HasPrevious ? "disabled" : "";
                    string nextDisabled = !Model.HasNext ? "disabled" : "";
                }
                <li class="page-item @previousDisabled">
                    <a class="page-link" asp-action="Index" asp-controller="Suppliers" asp-route-page="@(Model.Page - 1)" asp-route-size="@Model.Size">Previous</a>
                </li>
                
                @for(int i = 0, j = 1; i < Model.Total; i += Model.Size, j++)
                {
                    
                    string active = Model.Page == j ? "active" : "";
                    <li class="page-item @active">
                        <a class="page-link" asp-action="Index" asp-controller="Suppliers" asp-route-page="@j" asp-route-size="@Model.Size">@j</a>
                    </li>
                }

                <li class="page-item @nextDisabled">
                    <a class="page-link" asp-action="Index" asp-controller="Suppliers" asp-route-page="@(Model.Page + 1)" asp-route-size="@Model.Size">Next</a>
                </li>
            </ul>
        </nav>
    }
</div>